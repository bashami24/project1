    const handleUpdateProduct = (id: number, newName: string, newPrice: number, newSeller: number) => {
        updateProductAPI(id, newName, newPrice, newSeller).then(() => {
            const updatedProducts = products.map(product => {
                if (product.id === id) {
                    return { ...product, name: newName, price: newPrice, seller: newSeller };
                }
                return product;
            });
            setProducts(updatedProducts);
            setShowMenuId(null);
        });
    };


    <h1>Products</h1>
            <ul>
                {products.map((product) => (
                    <li key={product.id}>
                        {product.name} - {product.price} - {product.seller}
                        <button onClick={() => toggleMenu(product.id)}>Toggle Menu</button>
                        {showMenuId === product.id && (
                            <div>
                            <input type="text" placeholder="New Name" onChange={(e) => setNewName(e.target.value)} />
                            <input type="number" placeholder="New Price" onChange={(e) => setNewPrice(parseInt(e.target.value) || 0)} />
                            <input type="number" placeholder="New Seller ID" onChange={(e) => setNewSeller(parseInt(e.target.value) || 0)} />
                            <input type="number" name="id" value={product.id}onChange={handleChange} />
                                <button onClick={() => handleUpdateProduct(product.id, 'New Name', 0, 0)}>Update</button>
                                <button onClick={() => handleDeleteProduct(product.id)}>Delete</button>
                            </div>
                        )}
                    </li>
                ))}
