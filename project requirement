with feature_cumulative_payments as (
select distinct
A.CLAIM_PUBLICID_NK,
A.EXPOSURE_PUBLICID_NK,
A.CLAIM_SYMBOL_CODE,
A.ACCOUNTING_TIMESTAMP,
A.CLAIM_NUMBER,
from pd_presentation.product_v2.claim_financial_transaction as A
WHERE A.ACCOUNTING_TIMESTAMP <= '2021-02-28 23:59:59'

and claim_number = '123' and exposure_publicid_NK = '456' and claim_symbol_code = 'ABC'
),
joining_feature_timeline as
(select

B.*
 ,CASE WHEN B.STATUS_NAME = 'Closed' THEN B.PRIOR_REOPEN_TIMESTAMP ELSE B.REOPEN_TIMESTAMP END AS REOPEN_TIMESTAMP
,PENDING_OR_CLOSED
,RANK_ORDER
,B.S160_COVERAGE_CODE
from (Select *
      ,LAG(REOPEN_TIMESTAMP) OVER(PARTITION BY CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE ORDER BY RECORD_BEGIN_TIMESTAMP) AS PRIOR_REOPEN_TIMESTAMP 
      ,CASE WHEN STATUS_NAME = 'Closed' THEN 'Closed' ELSE 'Pending' END AS PENDING_OR_CLOSED
      ,RANK() OVER(PARTITION BY CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE ORDER BY RECORD_BEGIN_TIMESTAMP DESC) AS RANK_ORDER
       from pd_presentation.product_v2.claim_feature_timeline
       where  RECORD_BEGIN_TIMESTAMP <=  '2021-02-28 23:59:59'
 and claim_number = '123' and exposure_publicid_NK = '456' and claim_symbol_code = 'ABC'
 ) B
left join feature_cumulative_payments C
ON B.EXPOSURE_PUBLICID_NK = C.EXPOSURE_PUBLICID_NK AND B.CLAIM_SYMBOL_CODE = C.CLAIM_SYMBOL_CODE --AND B.CLAIM_NUMBER = C.CLAIM_NUMBER
AND date_trunc('SECOND', C.ACCOUNTING_TIMESTAMP) >= date_trunc('SECOND', B.RECORD_BEGIN_TIMESTAMP) and
  date_trunc('SECOND', C.ACCOUNTING_TIMESTAMP) < date_trunc('SECOND', B.RECORD_END_TIMESTAMP)
  ),
 reopen_count as
  (  select 
   B.*
  ,CASE WHEN B.STATUS_NAME = 'Closed' THEN B.PRIOR_REOPEN_TIMESTAMP ELSE B.REOPEN_TIMESTAMP END AS REOPEN_TIMESTAMP
 ,B.NEW_REOPENED_REPORTED_COUNT_1
,REOPEN_ORDER
,B.S160_COVERAGE_CODE
FROM( SELECT *
      ,LAG(REOPEN_TIMESTAMP) OVER(PARTITION BY CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE ORDER BY RECORD_BEGIN_TIMESTAMP) AS PRIOR_REOPEN_TIMESTAMP
,CASE WHEN  REOPEN_TIMESTAMP between '2021-02-01'and '2021-02-28 23:59:59'THEN MAX(NEW_REOPENED_REPORTED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, 
    CLAIM_SYMBOL_CODE,YEAR(REOPEN_TIMESTAMP), MONTH(REOPEN_TIMESTAMP),REOPEN_TIMESTAMP) ELSE 0 END AS NEW_REOPENED_REPORTED_COUNT_1
    ,RANK () OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, 
    CLAIM_SYMBOL_CODE order by NEW_REOPENED_REPORTED_COUNT desc) AS REOPEN_ORDER 
    from  pd_presentation.product_v2.claim_feature_timeline
   where record_begin_timestamp  <=  '2021-02-28 23:59:59'
  and cand claim_number = '123' and exposure_publicid_NK = '456' and claim_symbol_code = 'ABC') B
        left join feature_cumulative_payments C
        ON B.EXPOSURE_PUBLICID_NK = C.EXPOSURE_PUBLICID_NK AND B.CLAIM_SYMBOL_CODE = C.CLAIM_SYMBOL_CODE --AND B.CLAIM_NUMBER = C.CLAIM_NUMBER
        AND date_trunc('SECOND', C.ACCOUNTING_TIMESTAMP) >= date_trunc('SECOND', B.RECORD_BEGIN_TIMESTAMP) and
        date_trunc('SECOND', C.ACCOUNTING_TIMESTAMP) < date_trunc('SECOND', B.RECORD_END_TIMESTAMP
     ),
feature_snapshot_stg1 as
(
SELECT *

,CASE WHEN  CREATE_TIMESTAMP between   '2021-02-01'and  '2021-02-28 23:59:59'and STATUS_NAME !=  'Reopened' THEN MAX(NEW_REPORTED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE, YEAR(CREATE_TIMESTAMP), MONTH(CREATE_TIMESTAMP)) ELSE 0 END AS NEW_REPORTED_COUNT_1
,CASE WHEN  REOPEN_TIMESTAMP between '2021-02-01' and '2021-02-28 23:59:59'  THEN MAX(NEW_REOPENED_REPORTED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE,YEAR(REOPEN_TIMESTAMP), MONTH(REOPEN_TIMESTAMP), REOPEN_TIMESTAMP) ELSE 0 END AS NEW_REOPENED_REPORTED_COUNT_1
,CASE WHEN  CLOSE_TIMESTAMP between '2021-02-01'and '2021-02-28 23:59:59'and STATUS_NAME != 'Reopened' THEN MAX(NEW_CLOSED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE, YEAR(CLOSE_TIMESTAMP), MONTH(CLOSE_TIMESTAMP)) ELSE 0 END AS NEW_CLOSED_COUNT_1
  FROM (select  * from joining_feature_timeline) where
 ((record_begin_timestamp  <=  '2021-02-28 23:59:59')
     OR (ACCOUNTING_TIMESTAMP between '2021-02-01'and '2021-02-28 23:59:59'))

     ),
feature_snapshot as
(
SELECT *

FROM (
SELECT

CLAIM_NUMBER
,CLAIM_PUBLICID_NK
,EXPOSURE_PUBLICID_NK
,CLAIM_SYMBOL_CODE
,RECORD_BEGIN_TIMESTAMP
,'2021-02-01'
,'2021-02-28 23:59:59'
,ACCOUNTING_TIMESTAMP
,RECORD_END_TIMESTAMP
,CLOSE_TIMESTAMP
,REOPEN_TIMESTAMP
,PENDING_OR_CLOSED
,NEW_REPORTED_COUNT_1 AS NEW_REPORTED_COUNT 
,NEW_REOPENED_REPORTED_COUNT_1 AS NEW_REOPENED_REPORTED_COUNT 
,NEW_CLOSED_COUNT_1 AS NEW_CLOSED_COUNT
FROM
(
SELECT * FROM
(
SELECT * FROM
feature_snapshot_stg1
QUALIFY ROW_NUMBER() OVER( PARTITION BY CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE
                          ORDER BY  CASE WHEN ACCOUNTING_TIMESTAMP <= '2021-02-28 23:59:59'THEN ACCOUNTING_TIMESTAMP
       ELSE RECORD_BEGIN_TIMESTAMP  END DESC  ) = 1
) WHERE STATUS_NAME in ('Open', 'Reopened')
union 
SELECT * FROM
feature_snapshot_stg1 where ((ACCOUNTING_TIMESTAMP between '2021-02-01'and '2021-02-28 23:59:59')
                                    OR (RECORD_BEGIN_TIMESTAMP between '2021-02-01'and '2021-02-28 23:59:59')) and status_name = 'Closed'
QUALIFY ROW_NUMBER() OVER( PARTITION BY CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE
                         ORDER BY  CASE WHEN ACCOUNTING_TIMESTAMP <= '2021-02-28 23:59:59'THEN ACCOUNTING_TIMESTAMP
  ELSE RECORD_BEGIN_TIMESTAMP  END DESC   ) = 1)
       )
),

 final_reopen as 
(select * from reopen_count where REOPEN_TIMESTAMP between '2021-02-01'and '2021-02-28 23:59:59' 
    QUALIFY ROW_NUMBER () OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, 
    CLAIM_SYMBOL_CODE order by NEW_REOPENED_REPORTED_COUNT_1 desc) =1 )
select 
'2021-02-28'AS SNAP_DATE,
b.CLAIM_PUBLICID_NK,
b.CLAIM_NUMBER,
b.EXPOSURE_PUBLICID_NK,
b.S160_COVERAGE_CODE,
b.CLAIM_SYMBOL_CODE,
b.CREATE_TIMESTAMP,
b.CLOSE_TIMESTAMP,
b.REOPEN_TIMESTAMP,
b.PENDING_OR_CLOSED,
b.NEW_REPORTED_COUNT,
B.NEW_REOPENED_REPORTED_COUNT_1 AS NEW_REOPENED_REPORTED_COUNT,
b.NEW_CLOSED_COUNT,
from feature_snapshot b INNER join final_reopen a
on a.claim_number = b.claim_number and a.EXPOSURE_PUBLICID_NK = b.EXPOSURE_PUBLICID_NK and a.claim_symbol_code = b.claim_symbol_code
WHERE B.NEW_REOPENED_REPORTED_COUNT 
;
