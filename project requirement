HTTP project
Two models:
    Product
        Product Id (must be unique)
        Product Name
        Price
        Seller Name
    Seller
        Seller Name (must be unique)

Create/Read functionality on Seller
    GET /seller/
        - All sellers
    POST /seller/
        - Seller names must be non-null & unique
CRUD functionality on Product
    GET /product/
        - All products
    GET /product/{id}
        - Get a single product
        - We should get a 404 error when we try to access a non-existed product.
    POST /product/ - Add a single product
        - Product ids should be non-null and unique
        - Product names should be non-null
        - Price should be over 0
        - Seller name should refer to an actually existing seller
    PUT /product/{id} - Update a single product
        - Product names should be non-null
        - Price should be over 0
        - Seller name should refer to an actually existing seller
    DELETE /product/{id} - Delete a single product
        - DELETE should always return 200, regardless of if the item existed
            at the start or not. This is convention.

Unit testing of service classes
Logging within service classes

Javalin

public class Product {
    private String productId;
    private String productName;
    private double price;
    private String sellerName;

    // Constructors, getters, and setters
}

public class Seller {
    private String sellerName;

    // Constructors, getters, and setters
}


public class Main {
    public static void main(String[] args) {
        Javalin app = Javalin.create().start(7000);

        // Seller endpoints
        app.get("/seller", SellerController::getAllSellers);
        app.post("/seller", SellerController::createSeller);

        // Product endpoints
        app.get("/product", ProductController::getAllProducts);
        app.get("/product/:id", ProductController::getProductById);
        app.post("/product", ProductController::createProduct);
        app.put("/product/:id", ProductController::updateProduct);
        app.delete("/product/:id", ProductController::deleteProduct);
    }
}

Git 
 
•	What is Git? 

Is version control system that is used to track changes in the source code (source code mgt)
•	Why do we use Git?

Tracking changes, source code mgt, allows multiple developers to work together, nonlinear dev through parallel branches.

•	What is a commit? 
Saves changes to local repo. Git needs to know explicitly what change is made. 

•	What is GitHub? 
•	
It’s a code hosting platform for version control and collaboration.

•	What does push do?
Used to upload local repo to remote. 

•	What does pull do? 
Fetch/download content from remote and update local repo.

•	What does clone do?
Points to an existing repo and copy of that repo at another location. 

•	What does branch do? 
A pointer to a snapshot of changes 

•	What does checkout do? 
It tells Git which branch or commit you want your changes applied.

•	What does merge do? 

All changes in a featured branch are combined into a single commit to the master. branch.

•	What is a merge conflict? 
An issue when Git unable to resolve differences in code b/n two commits.



 	




Java basics 
 
•	What is compilation? 

The process of translating source code into byte code. Performed by java compiler (part of A JDK)

•	What does it mean for Java to be strongly typed? 

The type of variable is checked at compile-time - once a variable is declared as a certain type it can not be used as if it were another. Also, java demands the declaration of every variable with a data type.

•	What are primitive types? 

Basic data types that represent simple values 

•	What are the 8 primitive types in Java? 
•	
Byte   8 bit signed integer    Short  16 bit signed int       Int  32 bit signed int
Long  64 bit      Float  32 bit floating point number  Double  64 bit floating point number
Char  Unicode character    Boolean  true or false

•	What is a method? 
A block of code that, when called, perform a specific action specified in it. It allows code reusability
Helps to break a complex program into smaller chunks. Increases code readability.

•	What does ‘return’ do? 
It sends the result of the method and serves as an exit to the method.

•	What is a return type? 
The type specified as return type in the method.  public int add will return integer.

•	What does the return type ‘void’ mean? 
The method is not expected to return anything.

•	What is a method parameter? 
Are variables specified in a method’s signature.

•	What are the different boolean operators? 
&& AND returns true if both are true otherwise false || LOGICAL OR   returns true if at least one is true (true || false) true ! NOT negates the value of its operand
== EQUALS   !==     ^  EXCLUSIVE OR 
•	What are Strings in Java? 
Is                   a class  represents a sequence of characters. Strings in java are immutable (their value can’t be changed after they are created. String class provides methods like Length() charAt() substring() toLower and toUpper () .String pool  special memory area to store unique string literals. 


•	What is a stack trace? 
          A report of active stack frames @ a particular point in the execution of a program.when an exception is thrown JVM generates a stack trace to help developers identify the source of the problem.

•	What is the main method? What is its syntax? 
The main method serves as entry point for a stand alone java application. When running a java program JVM looks for “Main” method to start the execution of the prgrm.
Public static void main (string[] args) 
Java architecture 
 
•	What is the JDK? 
Java dev kit –is a software dev kit includes tools , executables and binaries for dev, compiling, debugging and running applications.

•	What is the JRE? 
Is an env that provides the necessary runtime support for executing. 
•	What is the JVM?
An abstract computing machine provides the runtime env for executing java bytecode,
Interprets bytecode into java machine code . 
•	What terminal command is used to compile a Java file? 
 javac
•	What is contained in stack memory? 
Method specific local variables and method call infos  each time a method is called a new frame is created on the stack to store info related to that method call. Includes local variables, parameters and return address. LOCAL VARIABLES declared within the method are stored in stack(these variables are only accessible within the scope of this method)REFERENCE VARS if an object is created within a method, the reference var to that object is stored in the stack. But the actual object is stored in the heap. Primitive datatypes are also stored in stack. LIFO the last item stored in the method will be removed first when method call is completed.

•	What is contained in heap memory? 
The region of computer’s memory used for dynamic memory allocation. Heap stores objects, arrays and other data structures created during the program execution.

•	What is the String Pool & does it belong to stack or heap memory? 
is a Special area in heap to store collection of literal strings. For optimization 

What is garbage collection? 
Objects that are no longer reachable that are removed periodically by JVM to free memory occupied by them.
 






OOP 
 
•	What is OOP? 
It’s a programming paradigm that organizes software design around the concept of physical objects.

•	What are Objects? 
Objects are instances of classes. Object is self-contained entity that has attributes (data) and bhvr(method).

•	What makes an Object different from a primitive type? 
Objects are complex data types with attributes and methods while primitive data types are basic data types like storing single data types with no method and attributes.

•	What is the relationship between a Class and an Object in Java? 
Class is a blueprint of an object that defines properties and bhrvs common to all objects of that type. While an object is an instance of a class, created based on the blueprint (Class). 

What are constructors? 
Special methods applied to instantiate an object. They are called when an object is created.

•	What is the default constructor? 
Default constructor is a constructor provided by compiler if a class doesn’t explicitly define a constructor.

Control flow 
 
•	What is an Array? 
An array is a data structure that allows you to store multiple values of the same type in a single variable. Each element is accessed through index( an index starts from 0).
 
•	How do I get an element of an array? 

int findIndex(int[],int target) {For (int  I = 0; I < arr.length; i++ { if (arr[i] == target) {return I;}} return -1;}
Changeelement (int[] arr, int index , int newvalue) { arr[index] = newvalue;}
removeElement (int[] arr, int index) { for (int I = index; I < arr.length – 1; ++i{ arr[i] = arr[I + 1];}
AddElement Size, isEmpty,get, set, iterator, listIterator, add etc methods

•	What are the different flow control statements in Java? 
If-else  used for decision making. Executes block of code if certain condition is true other wise will execute the other block of code.
Switch Statement provides a way to handle multiple conditions based on the value of an expression.
While loop  repeatedly executes a block of code if the while condition is true
Do- while similar to while but guarantees the execution of a block of code at least once even if the condition is false.
Forloop  a concise loop structure iterating over a range of values/elements
For-each-loop simplifies iterating over arrays or collections 
Break statement used to exit loop or switch statement prematurely.
Continue Statement skip the rest of the loop’s code and continues with the next iteration.

•	How is a for loop written in Java? 
For (datatype element :arrayofcollection ) { code to execute} For (int I = 0; I < 10; i++) { (if I == 5) { }
      
Testing 
 
•	What is JUnit? 
JUnit is a unit testing open-source framework for the Java programming language. Java Developers use this framework to write and execute automated tests. In Java, there are test cases that have to be re-executed every time a new code is added. This is done to make sure that nothing in the code is broken. 

•	What is a unit test? 

Unit testing, as the name suggests, refers to the testing of small segments of code. Here, a unit indicates the smallest bit of code that can be fetched out of the system. This small bit can be a line of the code, a method, or a class. The smaller the chunk of code, the better it is, as smaller chunks will tend to run faster. And this provides a better insight into the code and its performance. 

•	What are some of the annotations used in JUnit? 
@before @after @beforeclass @afterclass @test @ignores 

•	What is TDD? 
In layman’s terms, Test Driven Development (TDD) is a software development practice that focuses on creating unit test cases before developing the actual code. It is an iterative approach combining programming, unit test creation, and refactoring.
 
Exceptions 
 
•	What are exceptions in Java? 

When a program violates the semantic constraints of the Java programming language, the Java virtual machine signals this error to the program as an exception. An example of such a violation is an attempt to index outside the bounds of an array.

•	How are errors different from exceptions? 

An error is when something wrong or invalid happens in the code. It can cause a memory error, it is something that should never happen and can't be treated. Whereas an exception throws something when certain conditions are met in the code. It may not correspond to a real error.

•	What is the difference between checked and unchecked exceptions? 

A checked exception is caught at compile time whereas a runtime or unchecked exception is, as it states, at runtime. A checked exception must be handled either by re-throwing or with a try catch block, whereas an unchecked isn't required to be handled.

•	What might cause a NullPointerException? 

In Java, a NullPointerException occurs when a variable that is being accessed has not yet been assigned to an object, in other words, the variable is assigned as null.Therefore, a null pointer exception will occur when the code is pointing to something in memory that does not exist. scenarios where this exception could be invoked:
•	Calling the instance method of a null object.
•	Accessing or modifying the field of a null object.
•	Taking the length of null as if it were an array.
•	Accessing or modifying the slots of null as if it were an array.
•	Throwing null as if it were a Throwable value.
•	Is ArrayIndexOutOfBoundsException a runtime exception? 
The ArrayIndexOutOfBoundsException is a runtime exception in Java that occurs when an array is accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.

•	Is FileNotFoundException a runtime exception? 
FileNotFoundException is a checked exception in Java that occurs when an attempt to open a file denoted by a specified pathname fails.

•	How do I find where an exception was thrown within the program? 
To find out what line of code caused an exception in Java, you can use the stack trace of the exception. A stack trace is a list of method calls that were executed leading up to the exception.

•	What does ‘throws’ do? 
The throw statement throws a user-defined exception. Execution of the current function will stop (the statements after throw won't be executed), and control will be passed to the first catch block in the call stack. If no catch block exists among caller functions, the program will terminate.

•	What does try/catch do? 
A try block is the block of code (contains a set of statements) in which exceptions can occur; it's used to enclose the code that might throw an exception. The try block is always followed by a catch block, which handles the exception that occurs in the associated try block. A try block must be used within the method and it must be followed by a catch block(s) or finally block or both.
The catch block catches and handles the try block exceptions by declaring the type of exception within the parameter. The catch block includes the code and it is executed if an exception inside the try block occurs. The catch block is where you handle the exceptions; so this block must be follow the try block.The declared exception in catch block must be the parent class exception ( i.e., Exception) or the generated exception type. However, the best approach is to declare the generated type of exception. In the Java language, you can use a try block without a catch block but you can’t use the catch block without a try block.
•	Can I have multiple catch blocks? Multiple try blocks?  yes
 A try block can be followed by one or more catch blocks.
 
Java keywords & features 
 
•	What do access modifiers do? 
Access modifiers are keywords that can be used to control the visibility of fields, methods, and constructors in a class. The four access modifiers in Java are public, protected, default, and private.
•	What are the 4 access modifiers? 
Private: We can access the private modifier only within the same class and not from outside the class.
•	Default: We can access the default modifier only within the same package and not from outside the package. And also, if we do not specify any access modifier it will automatically consider it as default.
•	Protected: We can access the protected modifier within the same package and also from outside the package with the help of the child class. If we do not make the child class, we cannot access it from outside the package. So inheritance is a must for accessing it from outside the package.
•	Public: We can access the public modifier from anywhere. We can access public modifiers from within the class as well as from outside the class and also within the package and outside the package.

•	What are the non-access modifiers in Java? 

Static, final, abstract, synchronized, volatile, transient, native.

•	What does Static do? 
 Static keyword is mainly used for memory management. It can be used with variables, methods, blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class. Basically, static is used for a constant variable or a method that is same for every instance of a class.
•	What does final do? 
the final keyword is used to denote constants. It can be used with variables, methods, and classes. Once any entity (variable, method or class) is declared final, it can be assigned only once.

•	What is Scope in programming languages? 
Scope in programming language means the region or context in a program where a particular identifier (variable, function etc) is valid and can be accessed.

•	What are the different scopes in Java? 
Class Level Scope These variables must be declared inside class (outside any function). They can be directly accessed anywhere in class.
Variables declared inside a method have method level scope and can’t be accessed outside the method. A variable declared inside pair of brackets “{” and “}” in a method has scope within the brackets only.



 
Maven 
 
•	What is Maven? 
Apache Maven is a popular build tool, that takes your project's Java source code, compiles it, tests it and converts it into an executable Java program: either a . jar or a . war file.
•	What file should be changed to add new Maven dependencies?  Pom xml
•	What is the Maven lifecycle? 
Maven is built around the concept of a build lifecycle, which defines the order of execution for goals.The default Maven lifecycle consists of 8 major phases: Validate, Compile, Test, Package, Integration Test, Verify, Install, and Deploy.

•	How do I find & add a new dependency to Maven? 
Open your POM in the editor.
Press Alt Insert to open the Generate context menu.
From the context menu, select Dependency.
In the Maven Artifact Search tool window, in the search field, start typing the name of your dependency. In the list of results select the one you need and click Add.

Advanced OOP 
•	What are the 4 pillars of OOP?  
•	Can you explain Inheritance?      Extends 
 It is the mechanism in Java by which one class is allowed to inherit the features(fields and methods) of another class. In Java, Inheritance means creating new classes based on existing ones.
•	Can you explain Polymorphism? 
Polymorphism means "many forms", and it occurs when we have many classes that are related to each other by inheritance. Like we specified in the previous chapter; Inheritance lets us inherit attributes and methods from another class. Polymorphism uses those methods to perform different tasks.
It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class.
•	Can you explain Encapsulation? 
Encapsulation is defined as the wrapping up of data under a single unit. It is the mechanism that binds together code and the data it manipulates. Another way to think about encapsulation is, that it is a protective shield that prevents the data from being accessed by the code outside this shield. 
Technically in encapsulation, the variables or data of a class is hidden from any other class and can be accessed only through any member function of its own class in which it is declared.
As in encapsulation, the data in a class is hidden from other classes using the data hiding concept which is achieved by making the members or methods of a class private, and the class is exposed to the end-user or the world without providing any details behind implementation using the abstraction concept, so it is also known as a combination of data-hiding and abstraction.
Encapsulation can be achieved by Declaring all the variables in the class as private and writing public methods in the class to set and get the values of variables.
It is more defined with the setter and getter method.

•	Can you explain Abstraction? 
is the process in which we only show essential details/functionality to the user. The non-essential implementation details are not displayed to the user. 

•	What is the Object class in Java?
Is the top most class (parent class for all the classes). Meaning all classes in Java are derived classes and their base class is the Object Class. 

•	What methods does the Object class contain? 
•	toString() Method
•	This method obtains the object’s string representation, offering flexibility for customization. For instance, in a class such as “Office,” you have the option to adjust how the branch head with location appears when utilizing this method. The object itself determines its representation, proving valuable particularly during debugging. This functionality is part of the Object class methods in Java.
•	hash code() Method
•	A hash code is a numeric value generated by a specific method known as a hashing algorithm. In Java, every object possesses a distinct and unique hash code. This code is derived by applying the algorithm to the internal address of the object. It’s crucial to note that the hash code is not the real memory address; rather, it serves as a numerical representation of that address.
•	equals() Method
•	This method compares two objects and indicates whether they are equal or not. It is used to compare the value of the object on which the method is executed to the value of the object passed as a parameter.
•	get() Method
•	Java’s get() function, associated with objects, retrieves the value of a designated field represented by a Field object. If the field is of a primitive type, the procedure encapsulates the value in an object automatically. Additionally, the get() method serves to retrieve the runtime class object and gather metadata about the field, enhancing its utility.
•	finalize() Method
•	The garbage collector triggers the finalize() method when removing an object from memory, specifically when there are no remaining references to that object.
•	Clone() Method
•	In a subclass that implements the Cloneable Interface, it is expected to override the clone() method of the Object class. This method is utilized for creating a clone, essentially a duplicate of the object along with its member variable values, using the syntax aobj.clone(). If a class fails to implement the Cloneable interface, attempting this process results in a thrown CloneNotSupportedException.
wait() Method
By using this technique, the current thread is made to wait for a notification from another thread. Within the function, you must provide the time in milliseconds for which the thread will remain in this waiting state.
notify() Method
By using this technique, notifications are sent to a single thread at a time, waking it up while it is waiting for a certain item.
notifyAll() Method
•	This function awakens all threads that are currently waiting for an object and sends notifications to all threads at the same time.

•	What are Generics in Java? 
Generics means parameterized types. The idea is to allow type (Integer, String, … etc., and user-defined types) to be a parameter to methods, classes, and interfaces. Using Generics, it is possible to create classes that work with different data types. An entity such as class, interface, or method that operates on a parameterized type is a generic entity.

•	What are interfaces in Java? 
An interface is a completely "abstract class" that is used to group related methods with empty bodies. To access the interface methods, the interface must be "implemented" (kinda like inherited) by another class with the implements keyword (instead of extends). The body of the interface method is provided by the "implement" class:

•	What does extending a class do? 
The extends keyword extends a class (indicates that a class is inherited from another class).In Java, it is possible to inherit attributes and methods from one class to another. We group the "inheritance concept" into two categories:subclass (child) - the class that inherits from another class. superclass (parent) - the class being inherited from. To inherit from a class, use the extends keyword.
•	What does implementing an interface do? 
A class implements an interface if it declares the interface in its implements clause, and provides method bodies for all of the interface's methods. So one way to define an abstract data type in Java is as an interface, with its implementation as a class implementing that interface.

•	What is the difference between runtime and compile time polymorphism? 
the method executed is decided at compile time (method overloading) while the other is method overriding (is determined at run time)
•	
•	What is method overloading? 
•	What is method overriding? 
•	Can I extend multiple classes?  No
•	Can I implement multiple interfaces? Yes

•	How might access modifiers help us achieve Encapsulation? 
Private  members marked as Private are accessible only within the same class. This ensures the internal implementation details of a class are hidden from external classes. If no access modifier(default) is implemented members are accessible within the same package. Protected are accessible from the same package or sub classes this allows access to certain members while restricting access to general public. Public access modifiers can be accessed from any where that helps for code reusability.

•	How might interfaces help us achieve Abstraction? 

Week 3 
 
Collections 
 
•	What are collections in Java? 
•	What is the difference between a List and a Set? 
The primary difference between list and set is that a list allows duplicate elements and maintains their order, while a set ensures element uniqueness without any guaranteed order. Since lists are ordered, position indexing is allowed in them. However, in unordered items like sets, positional indexing is not possible.

•	What is the difference between a Set and a Map? 
A set is a non-sequenced (no indexes) collection of distinct objects (no duplicates). The presence or not of an object is important. A map is a collection of key-value pairs. Each ordered pair contains a key and a value.

•	What is the difference between a Stack and a Queue? 
The primary difference between Stack and Queue Data Structures is that Stack follows LIFO while Queue follows FIFO data structure type. LIFO refers to Last In First Out. It means that when we put data in a Stack, it processes the last entry first. Conversely, FIFO refers to First In First Out.

•	What is the difference between an ArrayList and LinkedList? 
The main difference between ArrayList and LinkedList in Java is the underlying data structure they use and performance characteristics.ArrayList uses an array, which allows for fast random access but slow insertion and deletion. While LinkedList uses a doubly linked list, which allows for fast insertion and deletion but slow random access.

•	Are maps part of the collection interface?  No

•	What is a wrapper class? 

Wrapper classes provide a way to use primitive data types (int, boolean, etc..) as objects.

