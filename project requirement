

HTTP project
Two models:
    Product
        Product Id (must be unique)
        Product Name
        Price
        Seller Name
    Seller
        Seller Name (must be unique)

Create/Read functionality on Seller
    GET /seller/
        - All sellers
    POST /seller/
        - Seller names must be non-null & unique
CRUD functionality on Product
    GET /product/
        - All products
    GET /product/{id}
        - Get a single product
        - We should get a 404 error when we try to access a non-existed product.
    POST /product/ - Add a single product
        - Product ids should be non-null and unique
        - Product names should be non-null
        - Price should be over 0
        - Seller name should refer to an actually existing seller
    PUT /product/{id} - Update a single product
        - Product names should be non-null
        - Price should be over 0
        - Seller name should refer to an actually existing seller
    DELETE /product/{id} - Delete a single product
        - DELETE should always return 200, regardless of if the item existed
            at the start or not. This is convention.




//seller list

import React from 'react';
import Seller from '../models/Seller';

interface SellerListProps {
  sellers: Seller[];
}

const SellerList: React.FC<SellerListProps> = ({ sellers }) => (
  <div>
    <h2>Sellers</h2>
    <ul>
      {sellers.map(seller => (
        <li key={seller.id}>{seller.name}</li>
      ))}
    </ul>
  </div>
);

export default SellerList;

 COMPONENTS SELLER LIST
import React from 'react';
import Product from '../models/Product';

interface ProductListProps {
  products: Product[];
}

const ProductList: React.FC<ProductListProps> = ({ products }) => (
  <div>
    <h2>Products</h2>
    <ul>
      {products.map(product => (
        <li key={product.id}>{product.name} - ${product.price}</li>
      ))}
    </ul>
  </div>
);

export default ProductList;

import React from 'react';
import Seller from '../models/Seller';

interface SellerListProps {
  sellers: Seller[];
}

const SellerList: React.FC<SellerListProps> = ({ sellers }) => (
  <div>
    <h2>Sellers</h2>
    <ul>
      {sellers.map(seller => (
        <li key={seller.id}>{seller.name}</li>
      ))}
    </ul>
  </div>
);

export default SellerList;



components 

import React from 'react';
import Seller from '../models/Seller';

interface SellerListProps {
  sellers: Seller[];
}

const SellerList: React.FC<SellerListProps> = ({ sellers }) => (
  <div>
    <h2>Sellers</h2>
    <ul>
      {sellers.map(seller => (
        <li key={seller.id}>{seller.name}</li>
      ))}
    </ul>
  </div>
);

export default SellerList;




import React, { useState } from 'react';

interface AddSellerFormProps {
  onAdd: (name: string, email: string) => void;
}

const AddSellerForm: React.FC<AddSellerFormProps> = ({ onAdd }) => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    onAdd(name, email);
    setName('');
    setEmail('');
  };

  return (
    <form onSubmit={handleSubmit}>
      <input
        type="text"
        placeholder="Name"
        value={name}
        onChange={e => setName(e.target.value)}
      />
      <input
        type="email"
        placeholder="Email"
        value={email}
        onChange={e => setEmail(e.target.value)}
      />
      <button type="submit">Add Seller</button>
    </form>
  );
};

export default AddSellerForm;

