,CASE WHEN  REOPEN_TIMESTAMP BETWEEN '2022-10-01' AND '2022-10-31 23:59:59'
        AND MAX(NEW_REOPENED_REPORTED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER, EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE, YEAR(REOPEN_TIMESTAMP), MONTH(REOPEN_TIMESTAMP)) = 0
        AND MAX(NEW_REOPENED_REPORTED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER, EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE, YEAR(DATEADD(MONTH, 1, REOPEN_TIMESTAMP)), MONTH(DATEADD(MONTH, 1, REOPEN_TIMESTAMP))) = 0
    THEN 1 
    ELSE 0 
END AS NEW_REOPENED_REPORTED_COUNT_1



SELECT
  *,
  CASE
    WHEN REOPEN_TIMESTAMP BETWEEN '2022-10-01' AND '2022-10-31 23:59:59'
      THEN MAX(NEW_REOPENED_REPORTED_COUNT) OVER (
        PARTITION BY
          CLAIM_NUMBER,
          EXPOSURE_PUBLICID_NK,
          CLAIM_SYMBOL_CODE,
          YEAR(REOPEN_TIMESTAMP),
          MONTH(REOPEN_TIMESTAMP)
      )
    ELSE 0
  END AS NEW_REOPENED_REPORTED_COUNT_1,
  CASE
    WHEN REOPEN_TIMESTAMP BETWEEN '2022-10-01' AND '2022-10-31 23:59:59'
      AND MAX(NEW_REOPENED_REPORTED_COUNT) OVER (
        PARTITION BY
          CLAIM_NUMBER,
          EXPOSURE_PUBLICID_NK,
          CLAIM_SYMBOL_CODE,
          YEAR(REOPEN_TIMESTAMP),
          MONTH(REOPEN_TIMESTAMP)
      ) = 1
      AND (
        SELECT
          NEW_REOPENED_REPORTED_COUNT
        FROM
          monthly_dest
        WHERE
          -- Assuming PREVIOUS_MONTH function returns the start and end dates for the previous month
          SNAP_DATE BETWEEN PREVIOUS_MONTH('2022-10-01') AND PREVIOUS_MONTH('2022-10-31 23:59:59')
          AND CLAIM_NUMBER = feature_snapshot.CLAIM_NUMBER
          AND EXPOSURE_PUBLICID_NK = feature_snapshot.EXPOSURE_PUBLICID_NK
          AND CLAIM_SYMBOL_CODE = feature_snapshot.CLAIM_SYMBOL_CODE
      ) = 0
      THEN 1
    ELSE 0
  END AS NEW_REOPENED_REPORTED_COUNT_CHECK
FROM
  your_table;
