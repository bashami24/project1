CASE 
    WHEN reopen_timestamp BETWEEN 'today' AND 'tomorrow' 
        AND (
            reopen_timestamp <> LAG(reopen_timestamp) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC)
            OR LAG(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) <> 'CLOSE'
        )
    THEN CASE 
             WHEN status = 'REOPEN' AND (
                    LAG(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) <> 'REOPEN' 
                    OR LAG(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) IS NULL
                 )
             THEN 1 
             ELSE 
                 CASE 
                     WHEN MAX(new_count) OVER (PARTITION BY cl, bc, cd, YEAR(reopen_timestamp), MONTH(reopen_timestamp)) = 0
                     THEN
                         CASE 
                             WHEN MIN(new_count) OVER (PARTITION BY cl, bc, cd, YEAR(reopen_timestamp), MONTH(reopen_timestamp)) = 1
                             THEN 1
                             ELSE 
                                 CASE 
                                     WHEN status = 'CLOSE' AND ROW_NUMBER() OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) = 1
                                     THEN 1
                                     ELSE 0
                                 END
                         END
                     ELSE MAX(new_count) OVER (PARTITION BY cl, bc, cd, YEAR(reopen_timestamp), MONTH(reopen_timestamp), reopen_timestamp) 
                 END
         END
    ELSE 
        CASE
            WHEN (status = 'REOPEN' AND COUNT(new_count) OVER (PARTITION BY cl, bc, cd, YEAR(reopen_timestamp), MONTH(reopen_timestamp)) = 0)
            THEN 1
            ELSE
                CASE
                    WHEN status = 'CLOSE' AND
                         (LAG(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) = 'REOPEN'
                         OR LAG(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) IS NULL)
                    THEN 1
                    ELSE 
                        CASE
                            WHEN status = 'REOPEN' AND 
                                 (LAG(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) = 'REOPEN')
                                 AND COUNT(new_count) OVER (PARTITION BY cl, bc, cd, YEAR(reopen_timestamp), MONTH(reopen_timestamp)) >= 2
                            THEN 1
                            ELSE 
                                CASE
                                    WHEN status = 'REOPEN' AND COUNT(new_count) OVER (PARTITION BY cl, bc, cd, YEAR(reopen_timestamp), MONTH(reopen_timestamp)) >= 3
                                    THEN 1
                                    ELSE 
                                        CASE
                                            WHEN status = 'CLOSE' AND 
                                                 (LEAD(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) = 'REOPEN'
                                                 OR LEAD(status) OVER (PARTITION BY cl, bc, cd ORDER BY order_timestamp DESC) IS NULL)
                                            THEN 1
                                            ELSE 0
                                        END
                                END
                        END
                END
        END
END AS new_count
