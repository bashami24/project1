

with cd as (
select distinct
A.CLAIM_PUBLICID_NK,
A.EXPOSURE_PUBLICID_NK,
A.CLAIM_SYMBOL_CODE,
A.ACCOUNTING_TIMESTAMP,
A.CLAIM_NUMBER,
from pd_presentation.product_v2.claim_financial_transaction as A
WHERE A.ACCOUNTING_TIMESTAMP <= '2022-10-31 23:59:59'

),
  
de  as
(select

 B.CLAIM_NUMBER
 ,B.CLAIM_PUBLICID_NK
 ,B.EXPOSURE_PUBLICID_NK
 ,B.CLAIM_SYMBOL_CODE
 ,B.CREATE_TIMESTAMP
 ,B.RECORD_BEGIN_TIMESTAMP
 ,C.ACCOUNTING_TIMESTAMP
 ,B.RECORD_END_TIMESTAMP
 ,B.CLOSE_TIMESTAMP
 ,CASE WHEN B.STATUS_NAME = 'Closed' THEN B.PRIOR_REOPEN_TIMESTAMP ELSE B.REOPEN_TIMESTAMP END AS REOPEN_TIMESTAMP
 ,B.NEW_REOPENED_REPORTED_COUNT
,RANK_ORDER
,B.S160_COVERAGE_CODE
from (Select *
      ,othere metrics
      ,RANK() OVER(PARTITION BY CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE ORDER BY RECORD_BEGIN_TIMESTAMP DESC) AS RANK_ORDER
       from pd_presentation.product_v2.claim_feature_timeline
       where  RECORD_BEGIN_TIMESTAMP <=  '2022-10-31 23:59:59
 ) B
left join cd  C
ON B.EXPOSURE_PUBLICID_NK = C.EXPOSURE_PUBLICID_NK AND B.CLAIM_SYMBOL_CODE = C.CLAIM_SYMBOL_CODE AND B.CLAIM_NUMBER = C.CLAIM_NUMBER
AND date_trunc('SECOND', C.ACCOUNTING_TIMESTAMP) >= date_trunc('SECOND', B.RECORD_BEGIN_TIMESTAMP) and
  date_trunc('SECOND', C.ACCOUNTING_TIMESTAMP) < date_trunc('SECOND', B.RECORD_END_TIMESTAMP)
  ),
  

fg as
(
SELECT *

,CASE WHEN  CREATE_TIMESTAMP between   '2022-10-01'and  '2022-10-31 23:59:59'and STATUS_NAME !=  'Reopened' THEN MAX(NEW_REPORTED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE, YEAR(CREATE_TIMESTAMP), MONTH(CREATE_TIMESTAMP)) ELSE 0 END AS NEW_REPORTED_COUNT_1
,CASE WHEN  REOPEN_TIMESTAMP between '2022-10-01' and '2022-10-31 23:59:59'  
THEN MAX(NEW_REOPENED_REPORTED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE,YEAR(REOPEN_TIMESTAMP), 
MONTH(REOPEN_TIMESTAMP), REOPEN_TIMESTAMP) ELSE 0 END AS COUNT_2
  ,CASE WHEN  CLOSE_TIMESTAMP between '2022-10-01'and '2022-10-31 23:59:59'and STATUS_NAME != 'Reopened' THEN MAX(NEW_CLOSED_COUNT) OVER (PARTITION BY  CLAIM_NUMBER,EXPOSURE_PUBLICID_NK, CLAIM_SYMBOL_CODE, YEAR(CLOSE_TIMESTAMP), MONTH(CLOSE_TIMESTAMP)) ELSE 0 END AS NEW_CLOSED_COUNT_1
  FROM (select  * from joining_feature_timeline) where
 ((record_begin_timestamp  <=  '2022-10-31 23:59:59')
     OR (ACCOUNTING_TIMESTAMP between '2022-10-01'and '2022-10-31 23:59:59'))
 
     ),

feature_snapshot as
(
SELECT *

FROM (
SELECT

CLAIM_NUMBER
,CLAIM_PUBLICID_NK
,EXPOSURE_PUBLICID_NK
,CLAIM_SYMBOL_CODE
,S160_COVERAGE_CODE
,CREATE_TIMESTAMP
,RECORD_BEGIN_TIMESTAMP
,other fields
,PENDING_OR_CLOSED
,NEW_REPORTED_COUNT_1 AS NEW_REPORTED_COUNT 
--,NEW_REOPENED_REPORTED_COUNT_1
,NEW_REOPENED_REPORTED_COUNT_1 AS NEW_REOPENED_REPORTED_COUNT 
,NEW_CLOSED_COUNT_1 AS NEW_CLOSED_COUNT

FROM
(
SELECT * FROM
(
SELECT *
FROM
fg 
QUALIFY ROW_NUMBER() OVER( PARTITION BY a.CLAIM_NUMBER,a.EXPOSURE_PUBLICID_NK, a.CLAIM_SYMBOL_CODE
                          ORDER BY  CASE WHEN a.ACCOUNTING_TIMESTAMP <= '2022-10-31 23:59:59'THEN a.ACCOUNTING_TIMESTAMP
       ELSE a.RECORD_BEGIN_TIMESTAMP  END DESC  ) = 1
) WHERE STATUS_NAME in ('Open', 'Reopened')

union 
SELECT *  
  FROM
fg 
where ((A.ACCOUNTING_TIMESTAMP between '2022-10-01'and '2022-10-31 23:59:59')
                                    OR (A.RECORD_BEGIN_TIMESTAMP between '2022-10-01'and '2022-10-31 23:59:59')) and a. status_name = 'Closed'
QUALIFY ROW_NUMBER() OVER( PARTITION BY A.CLAIM_NUMBER,A.EXPOSURE_PUBLICID_NK, A.CLAIM_SYMBOL_CODE
                         ORDER BY  CASE WHEN A.ACCOUNTING_TIMESTAMP <= '2022-10-31 23:59:59'THEN A.ACCOUNTING_TIMESTAMP
  ELSE A.RECORD_BEGIN_TIMESTAMP  END DESC   ) = 1)
       )
) 
select 
a.CLAIM_PUBLICID_NK,
a.CLAIM_NUMBER,
a.EXPOSURE_PUBLICID_NK,
a.S160_COVERAGE_CODE,
a.CLAIM_SYMBOL_CODE,
a.CREATE_TIMESTAMP,
a.CLOSE_TIMESTAMP,
a.REOPEN_TIMESTAMP,
a.NEW_REPORTED_COUNT,
a.COUNT_2 
from feature_snapshot a;  


