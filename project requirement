

HTTP project
Two models:
    Product
        Product Id (must be unique)
        Product Name
        Price
        Seller Name
    Seller
        Seller Name (must be unique)

Create/Read functionality on Seller
    GET /seller/
        - All sellers
    POST /seller/
        - Seller names must be non-null & unique
CRUD functionality on Product
    GET /product/
        - All products
    GET /product/{id}
        - Get a single product
        - We should get a 404 error when we try to access a non-existed product.
    POST /product/ - Add a single product
        - Product ids should be non-null and unique
        - Product names should be non-null
        - Price should be over 0
        - Seller name should refer to an actually existing seller
    PUT /product/{id} - Update a single product
        - Product names should be non-null
        - Price should be over 0
        - Seller name should refer to an actually existing seller
    DELETE /product/{id} - Delete a single product
        - DELETE should always return 200, regardless of if the item existed
            at the start or not. This is convention.




import axios from 'axios';
import { Seller } from '../models/Seller';

const API_URL = 'http://localhost:9001';

export const getAllSellers = async (): Promise<Seller[]> => {
    const response = await axios.get<Seller[]>(`${API_URL}/sellers`);
    return response.data;
};

import axios from 'axios';
import { Product } from '../models/Product';

const API_URL = 'http://localhost:9001';

export const getAllProducts = async (): Promise<Product[]> => {
    const response = await axios.get<Product[]>(`${API_URL}/products`);
    return response.data;
};

import axios from 'axios';
import { Product } from '../models/Product';

const API_URL = 'http://localhost:9001';

export const getAllProducts = async (): Promise<Product[]> => {
    const response = await axios.get<Product[]>(`${API_URL}/products`);
    return response.data;
};


// components/ProductList.tsx
import React, { useEffect, useState } from 'react';
import { Product } from '../models/Product';
import { getAllProducts, addProduct } from '../services/ProductService';

export const ProductList: React.FC = () => {
    const [products, setProducts] = useState<Product[]>([]);
    const [showMenuId, setShowMenuId] = useState<number | null>(null);
    const [newProductName, setNewProductName] = useState('');

    useEffect(() => {
        getAllProducts().then(setProducts);
    }, []);

    const toggleMenu = (productId: number) => {
        setShowMenuId((prevId) => (prevId === productId ? null : productId));
    };

    const handleAddProduct = async () => {
        if (!newProductName) return;
        await addProduct({ id: 0, name: newProductName, price: 0, sellerId: 0 });
        setNewProductName('');
        getAllProducts().then(setProducts);
    };

    return (
        <div>
            <h2>All Products</h2>
            <ul>
                {products.map((product) => (
                    <li key={product.id}>
                        {product.name}{' '}
                        <button onClick={() => toggleMenu(product.id)}>
                            {showMenuId === product.id ? 'Hide' : 'Show'} Menu
                        </button>
                        {showMenuId === product.id && (
                            <div>
                                <button onClick={() => console.log(`Update product ${product.id}`)}>Update</button>
                                <button onClick={() => console.log(`Delete product ${product.id}`)}>Delete</button>
                            </div>
                        )}
                    </li>
                ))}
            </ul>
            <input
                type="text"
                placeholder="Enter product name"
                value={newProductName}
                onChange={(e) => setNewProductName(e.target.value)}
            />
            <button onClick={handleAddProduct}>Add Product</button>
        </div>
    );
};

